# bitcoin_price_analyzer.py
# 20241022T234448Z: this script was generated by 1GLENCo at https://claude.ai/chat/e47a8478-f14b-4cf0-a6ce-38bf39028d3b

import csv
import requests
from datetime import datetime

def fetch_data(url):
    response = requests.get(url)
    return response.text.splitlines()

def process_data(data):
    reader = csv.DictReader(data)
    exchanges = reader.fieldnames[1:]  # All columns except 'Time'
    
    price_data = {exchange: {'min': float('inf'), 'max': float('-inf')} for exchange in exchanges}
    times = []

    for row in reader:
        times.append(datetime.strptime(row['Time'], '%Y-%m-%d %H:%M:%S'))
        for exchange in exchanges:
            if row[exchange]:  # Check if the price is not empty
                price = float(row[exchange])
                price_data[exchange]['min'] = min(price_data[exchange]['min'], price)
                price_data[exchange]['max'] = max(price_data[exchange]['max'], price)

    return price_data, min(times), max(times)

def generate_report(price_data, range_low, range_high):
    report = "Bitcoin Price Summary Report\n"
    report += f"Time Range: {range_low} to {range_high}\n\n"

    overall_max = float('-inf')
    overall_max_exchange = ''

    for exchange, data in price_data.items():
        report += f"{exchange}:\n"
        report += f"  Lowest Price: ${data['min']:.2f}\n"
        report += f"  Highest Price: ${data['max']:.2f}\n\n"
        
        if data['max'] > overall_max:
            overall_max = data['max']
            overall_max_exchange = exchange

    report += f"The highest price of bitcoin between {range_low} and {range_high} was ${overall_max:.2f} on the {overall_max_exchange} exchange."
    return report

def main():
    url = "https://data.bitcoinity.org/export_data.csv?c=e&currency=USD&data_type=price&t=l&timespan=24h"
    data = fetch_data(url)
    price_data, range_low, range_high = process_data(data)
    report = generate_report(price_data, range_low, range_high)
    
    print(report)
    
    # Optionally, save the report to a file
    with open('bitcoin_price_report.txt', 'w') as f:
        f.write(report)

if __name__ == "__main__":
    main()
